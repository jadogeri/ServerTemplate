const request = require('supertest');
const { MongoDBContainer } = require('@testcontainers/mongodb');
const mongoose = require('mongoose');
const app = require("../../../../index"); // Your Express app

let mongodbContainer: any;
let mongoUri: string;

describe('User API', () => {
  beforeAll(async () => {
    // Start the MongoDB container
    mongodbContainer = await new MongoDBContainer('mongo:6.0.1').start();
    mongoUri = mongodbContainer.getConnectionString();

    // Connect Mongoose to the Testcontainers MongoDB instance
    await mongoose.connect(mongoUri, { directConnection: true });
  }, 60000); // Increase timeout for container startup

  afterAll(async () => {
    // Disconnect Mongoose and stop the container
    await mongoose.disconnect();
    await mongodbContainer.stop();
  });

  beforeEach(async () => {
    // Clear the database before each test
    await mongoose.connection.db.dropDatabase();
  });

  it('should create a new user', async () => {
    const newUser = { username: 'John1@0Doe', email: 'josephadogeridev@gmail.com',password:'J0h1n@D0e1'};
    const response = await request(app)
      .post("http://localhost:6000/api/v2/users")
      .send(newUser)
      .expect(201);

    expect(response.body.username).toBe(newUser.username);
    expect(response.body.email).toBe(newUser.email);

    const usersInDb = await mongoose.model('User').find({});
    expect(usersInDb.length).toBe(1);
    expect(usersInDb[0].name).toBe(newUser.username);
  });

//   it('should get all users', async () => {
//     await mongoose.model('User').create({ name: 'Jane Doe', email: 'jane.doe@example.com' });
//     await mongoose.model('User').create({ name: 'Peter Pan', email: 'peter.pan@example.com' });

//     const response = await request(app)
//       .get('/users')
//       .expect(200);

//     expect(response.body.length).toBe(2);
//     expect(response.body[0].name).toBe('Jane Doe');
//     expect(response.body[1].name).toBe('Peter Pan');
//   });
});